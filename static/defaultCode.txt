const model = tf.sequential();
model.add(tf.layers.dense({ units: 4, inputShape: [4], activation: "relu" }));
model.add(tf.layers.dense({ units: 3, activation: "softmax" })); // Use softmax activation for multi-class classification
model.compile({
    loss: 'categoricalCrossentropy', // Use categoricalCrossentropy loss for multi-class classification
    optimizer: 'sgd',
    metrics: ['categoricalAccuracy'] // Use categoricalAccuracy as the evaluation metric
});

model; // return model  